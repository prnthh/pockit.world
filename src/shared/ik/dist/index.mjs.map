{"version":3,"file":"index.mjs","sources":["../src/topic.ts","../src/entity-collection.ts","../src/query.ts","../src/world.ts"],"sourcesContent":["export type Listener<T extends unknown[]> = (...data: T) => void\n\nexport type Unsubscribe = () => void\n\nexport class Topic<T extends unknown[]> {\n  listeners: Set<(...data: T) => void> = new Set()\n\n  add(handler: Listener<T>): Unsubscribe {\n    this.listeners.add(handler)\n\n    return () => this.remove(handler)\n  }\n\n  remove(handler: Listener<T>): void {\n    this.listeners.delete(handler)\n  }\n\n  emit(...data: T): void {\n    for (const handler of this.listeners) {\n      handler(...data)\n    }\n  }\n\n  clear(): void {\n    this.listeners.clear()\n  }\n}\n","import { Topic } from './topic'\nimport type { AnyEntity } from './world'\n\nexport class EntityCollection<Entity> {\n  entities: Entity[] = []\n\n  version = 0\n\n  onEntityAdded = new Topic<[entity: Entity]>()\n\n  onEntityRemoved = new Topic<[entity: Entity]>()\n\n  /** @ignore */\n  _entityPositions = new Map<Entity, number>()\n\n  get first(): Entity | undefined {\n    return this.entities[0]\n  }\n\n  get size() {\n    return this.entities.length\n  }\n\n  [Symbol.iterator]() {\n    let index = this.entities.length\n\n    const result: {\n      value: Entity\n      done: boolean\n    } = {\n      value: undefined!,\n      done: false,\n    }\n\n    return {\n      next: () => {\n        result.value = this.entities[--index]\n        result.done = index < 0\n        return result\n      },\n    }\n  }\n\n  has(entity: Entity): boolean {\n    return this._entityPositions.has(entity)\n  }\n}\n\nexport const addToCollection = <E extends AnyEntity>(\n  collection: EntityCollection<E>,\n  entity: E\n): void => {\n  // assumes the entity is not already in the collection\n\n  collection.entities.push(entity)\n  collection._entityPositions.set(entity, collection.entities.length - 1)\n\n  collection.version++\n\n  collection.onEntityAdded.emit(entity)\n}\n\nexport const removeFromCollection = <E extends AnyEntity>(\n  collection: EntityCollection<E>,\n  entity: E\n): void => {\n  // assumes the entity is in the collection\n\n  const index = collection._entityPositions.get(entity)!\n  collection._entityPositions.delete(entity)\n\n  const other = collection.entities[collection.entities.length - 1]\n  if (other !== entity) {\n    collection.entities[index] = other\n    collection._entityPositions.set(other, index)\n  }\n  collection.entities.pop()\n\n  collection.version++\n\n  collection.onEntityRemoved.emit(entity)\n}\n","import { EntityCollection } from './entity-collection'\n\nexport type With<T, P extends keyof T> = T & Required<Pick<T, P>>\n\nexport type Without<T, P extends keyof T> = Pick<T, Exclude<keyof T, P>> &\n  Partial<Pick<T, P>>\n\nexport type Strict<T> = WithoutOptionalProperties<T>\n\ntype OptionalProperties<T> = {\n  [P in keyof T]-?: undefined extends T[P] ? P : never\n}\n\ntype WithoutOptionalProperties<T> = Pick<\n  T,\n  Exclude<keyof T, OptionalProperties<T>[keyof T]>\n>\n\nexport type QueryConditionType = 'all' | 'any' | 'not'\n\nexport type QueryCondition<Entity> = {\n  type: QueryConditionType\n  components: (keyof Entity)[]\n}\n\nexport type QueryConditions<Entity> = QueryCondition<Entity>[]\n\nexport type QueryFn<Entity, ResultEntity> = (\n  q: QueryBuilder<Entity>\n) => QueryBuilder<ResultEntity>\n\nexport class Query<Entity> extends EntityCollection<Entity> {\n  references = new Set<unknown>()\n\n  constructor(\n    public dedupe: string,\n    public conditions: QueryConditions<Entity>,\n  ) {\n    super()\n  }\n}\n\nexport const prepareQuery = (\n  queryFn: QueryFn<any, any>\n): { conditions: QueryConditions<any>; dedupe: string } => {\n  /* evaluate queryFn */\n  const queryBuilder = new QueryBuilder()\n  queryFn(queryBuilder)\n  const queryBuilderConditions = queryBuilder.conditions\n\n  /* validate conditions */\n  if (queryBuilderConditions.length <= 0) {\n    throw new Error('Query must have at least one condition')\n  }\n\n  if (queryBuilderConditions.some((condition) => condition.components.length <= 0)) {\n    throw new Error('Query conditions must have at least one component')\n  }\n\n  /* normalize conditions */\n  const normalisedConditions: QueryConditions<any> = []\n\n  const combinedAllCondition: QueryCondition<any> = { type: 'all', components: [] }\n  const combinedNotCondition: QueryCondition<any> = { type: 'not', components: [] }\n\n  for (const condition of queryBuilderConditions) {\n    if (condition.type === 'all') {\n      combinedAllCondition.components.push(...condition.components)\n    } else if (condition.type === 'not') {\n      combinedNotCondition.components.push(...condition.components)\n    } else {\n      normalisedConditions.push(condition)\n    }\n  }\n\n  if (combinedAllCondition.components.length > 0) {\n    normalisedConditions.push(combinedAllCondition)\n  }\n  if (combinedNotCondition.components.length > 0) {\n    normalisedConditions.push(combinedNotCondition)\n  }\n\n  /* create query dedupe string */\n  const dedupe = normalisedConditions\n    .map(({ type, components }) => {\n      return `${type}(${components.sort().join(', ')})`\n    })\n    .sort()\n    .join(' && ')\n\n  return {\n    conditions: normalisedConditions,\n    dedupe,\n  }\n}\n\nexport const evaluateQueryConditions = <Entity>(\n  conditions: QueryConditions<Entity>,\n  entity: Entity\n): boolean => {\n  for (let c = 0; c < conditions.length; c++) {\n    const condition = conditions[c]\n\n    if (\n      (condition.type === 'all' &&\n        !condition.components.every((c) => entity[c] !== undefined)) ||\n      (condition.type === 'any' &&\n        !condition.components.some((c) => entity[c] !== undefined)) ||\n      (condition.type === 'not' &&\n        condition.components.some((c) => entity[c] !== undefined))\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport class QueryBuilder<Entity> {\n  T!: Entity\n\n  conditions: QueryConditions<Entity> = []\n\n  /* conditions */\n  all = <C extends keyof Entity>(...components: C[]) => {\n    this.conditions.push({ type: 'all', components })\n    return this as unknown as QueryBuilder<With<Entity, C>>\n  }\n\n  any = <C extends keyof Entity>(...components: C[]): QueryBuilder<Entity> => {\n    this.conditions.push({ type: 'any', components })\n    return this\n  }\n\n  not = <C extends keyof Entity>(...components: C[]) => {\n    this.conditions.push({ type: 'not', components })\n    return this as unknown as QueryBuilder<Without<Entity, C>>\n  }\n\n  /* condition aliases */\n  with = this.all\n  have = this.all\n  has = this.all\n  every = this.all\n  is = this.all\n\n  some = this.any\n  one = this.any\n\n  none = this.not\n  without = this.not\n\n  /* no-op grammar */\n  get and() {\n    return this\n  }\n\n  get but() {\n    return this\n  }\n\n  get where() {\n    return this\n  }\n\n  get are() {\n    return this\n  }\n}\n","import {\n  EntityCollection,\n  addToCollection,\n  removeFromCollection,\n} from './entity-collection'\nimport { Query, QueryFn, evaluateQueryConditions, prepareQuery } from './query'\n\nconst DEFAULT_QUERY_HANDLE = Symbol('standalone')\n\nexport type AnyEntity = Record<string, any>\n\nexport class World<E extends AnyEntity = any> extends EntityCollection<E> {\n  queries: Query<any>[] = []\n\n  /**\n   * Creates a new entity\n   * @param entity\n   * @returns the created entity\n   *\n   * @example\n   * ```ts\n   * const entity = {\n   *   position: { x: 0, y: 0 },\n   *   velocity: { x: 0, y: 0 },\n   * }\n   *\n   * world.create(entity)\n   * ```\n   *\n   * @example\n   * ```ts\n   * const entity = world.create({\n   *   position: { x: 0, y: 0 },\n   *   velocity: { x: 0, y: 0 },\n   * })\n   * ```\n   */\n  create<Entity extends E>(entity: Entity): E & Entity {\n    if (this.has(entity)) return entity\n\n    addToCollection(this, entity)\n\n    this.index(entity)\n\n    return entity\n  }\n\n  /**\n   * Destroys an entity\n   * @param entity\n   *\n   * @example\n   * ```ts\n   * const entity = world.create({ foo: 'bar' })\n   * world.destroy(entity)\n   * ```\n   */\n  destroy(entity: E): void {\n    if (!this.has(entity)) return\n\n    removeFromCollection(this, entity)\n\n    /* remove entity from queries */\n    this.queries.forEach((query) => {\n      if (query.has(entity)) {\n        removeFromCollection(query, entity)\n      }\n    })\n  }\n\n  /**\n   * Adds a component to an entity\n   * @param entity\n   * @param component\n   * @param value\n   * @returns the world, for chaining\n   *\n   * @example\n   * ```ts\n   * const entity = {}\n   * world.create(entity)\n   * world.add(entity, 'foo', 'bar')\n   * ```\n   */\n  add<C extends keyof E>(entity: E, component: C, value: E[C]): void {\n    if (entity[component] !== undefined) return\n\n    entity[component] = value\n\n    this.index(entity)\n  }\n\n  /**\n   * Removes a component from an entity\n   * @param entity\n   * @param component\n   * @returns the world, for chaining\n   *\n   * @example\n   * ```ts\n   * const entity = {}\n   * world.create(entity)\n   * world.add(entity, 'foo', 'bar')\n   * world.remove(entity, 'foo')\n   * ```\n   */\n  remove(entity: E, component: keyof E): void {\n    if (entity[component] === undefined) return\n\n    const draft = { ...entity }\n    delete draft[component]\n\n    this.index(entity, draft)\n\n    delete entity[component]\n  }\n\n  /**\n   * Applies an update to an entity, checking for added and removed components and updating queries.\n   * The update is applied in bulk, so queries are only updated once.\n   * @param entity the entity to update\n   * @param updateFn the update function\n   *\n   * @example\n   * ```ts\n   * const entity = world.create({ health: 10, poisioned: true })\n   *\n   * // add and remove components in a single bulk update, using regular object syntax\n   * world.update(entity, (e) => {\n   *   // add a component\n   *   e.position = { x: 0, y: 0 }\n   *\n   *   // remove a component\n   *   delete e.poisioned\n   * })\n   * ```\n   */\n  update(\n    entity: E,\n    updateFnOrPartial: ((entity: E) => void) | Partial<E>\n  ): void {\n    const draft = { ...entity }\n\n    if (typeof updateFnOrPartial === 'function') {\n      updateFnOrPartial(draft)\n    } else {\n      Object.assign(draft, updateFnOrPartial)\n    }\n\n    const added = Object.keys(draft).filter((key) => entity[key] === undefined)\n    const removed = Object.keys(entity).filter(\n      (key) => draft[key] === undefined\n    )\n\n    // commit additions before indexing\n    for (const component of added) {\n      entity[component as keyof E] = draft[component]\n    }\n\n    this.index(entity, draft)\n\n    // commit removals after indexing\n    for (const component of removed) {\n      delete entity[component]\n    }\n\n    Object.assign(entity, draft)\n  }\n\n  /**\n   * Creates a query that updates with entity composition changes.\n   * @param queryFn the query function\n   * @returns the query instance\n   *\n   * @example\n   * ```ts\n   * const query = world.query((e) => e.has('position').and.has('velocity'))\n   * ```\n   *\n   * @example\n   * ```ts\n   * const query = world.query((e) => e.has('position').but.not('dead'))\n   * ```\n   *\n   * @example\n   * ```ts\n   * const query = world.query((e) => e.has('position').and.one('player', 'enemy'))\n   * ```\n   */\n  query<ResultEntity extends E>(\n    queryFn: QueryFn<E, ResultEntity>,\n    options?: { handle: unknown }\n  ): Query<ResultEntity> {\n    const { conditions, dedupe } = prepareQuery(queryFn)\n\n    const handle = options?.handle ?? DEFAULT_QUERY_HANDLE\n\n    let query = this.queries.find((query) => query.dedupe === dedupe)\n\n    if (query) {\n      query.references.add(handle)\n      return query\n    }\n\n    query = new Query(dedupe, conditions)\n    query.references.add(handle)\n\n    this.queries.push(query)\n\n    /* populate query with existing entities */\n    const matches: E[] = []\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i]\n\n      if (evaluateQueryConditions(query.conditions, entity)) {\n        matches.push(entity)\n      }\n    }\n\n    for (let i = 0; i < matches.length; i++) {\n      addToCollection(query, matches[i])\n    }\n\n    return query\n  }\n\n  /**\n   * Destroys a Query\n   * @param query the Query to remove\n   * @returns\n   */\n  destroyQuery(query: Query<any>, options?: { handle: unknown }): void {\n    if (!this.queries.includes(query)) return\n\n    const handle = options?.handle ?? DEFAULT_QUERY_HANDLE\n\n    query.references.delete(handle)\n\n    if (query.references.size > 0) return\n\n    const queryIndex = this.queries.indexOf(query)\n    this.queries.splice(queryIndex, 1)\n\n    query.onEntityAdded.clear()\n    query.onEntityRemoved.clear()\n  }\n\n  /**\n   * Filters entities that match a given query.\n   * @param queryFn the query to match\n   * @returns entities matching the query\n   */\n  filter<ResultEntity>(queryFn: QueryFn<E, ResultEntity>): ResultEntity[] {\n    const { conditions, dedupe } = prepareQuery(queryFn)\n\n    const query = this.queries.find((query) => query.dedupe === dedupe)\n    if (query) {\n      return [...query.entities] as ResultEntity[]\n    }\n\n    const matches: E[] = []\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i]\n\n      if (evaluateQueryConditions(conditions, entity)) {\n        matches.push(entity)\n      }\n    }\n\n    return matches as unknown as ResultEntity[]\n  }\n\n  /**\n   * Finds an entity that matches a given query\n   * @param queryFn the query to match\n   * @returns the first entity matching the query\n   */\n  find<ResultEntity>(\n    queryFn: QueryFn<E, ResultEntity>\n  ): ResultEntity | undefined {\n    const { conditions, dedupe } = prepareQuery(queryFn)\n\n    const query = this.queries.find((query) => query.dedupe === dedupe)\n\n    if (query) {\n      return query.first as ResultEntity | undefined\n    }\n\n    for (const entity of this.entities) {\n      if (evaluateQueryConditions(conditions, entity)) {\n        return entity as ResultEntity | undefined\n      }\n    }\n\n    return undefined\n  }\n\n  /**\n   * Removes all entities from the world.\n   */\n  clear() {\n    const entities = [...this.entities]\n\n    for (let i = 0; i < entities.length; i++) {\n      this.destroy(entities[i])\n    }\n\n    this._entityPositions.clear()\n  }\n\n  /**\n   * Indexes an entity.\n   * \n   * Avoid calling this method directly unless you know what you're doing.\n   *\n   * This is called automatically when:\n   * - an entity is created\n   * - a component is added or removed from an entity\n   * - an entity is destroyed\n   *\n   * @param entity the entity to index\n   * @param draft the draft entity that queries are evaluated against, defaults to entity\n   * @returns\n   */\n  index(entity: E, draft: E = entity) {\n    if (!this.has(entity)) return\n\n    for (let q = 0; q < this.queries.length; q++) {\n      const query = this.queries[q]\n\n      const match = evaluateQueryConditions(query.conditions, draft)\n      const has = query.has(entity)\n\n      if (match && !has) {\n        addToCollection(query, entity)\n      } else if (!match && has) {\n        removeFromCollection(query, entity)\n      }\n    }\n  }\n}\n"],"names":["Topic","listeners","Set","add","handler","remove","delete","emit","data","clear","EntityCollection","entities","version","onEntityAdded","onEntityRemoved","_entityPositions","Map","first","size","length","Symbol","iterator","index","result","value","undefined","done","next","has","entity","addToCollection","collection","push","set","removeFromCollection","get","other","pop","Query","references","constructor","dedupe","conditions","prepareQuery","queryFn","queryBuilder","QueryBuilder","queryBuilderConditions","Error","some","condition","components","normalisedConditions","combinedAllCondition","type","combinedNotCondition","map","sort","join","evaluateQueryConditions","c","every","all","any","not","with","have","is","one","none","without","and","but","where","are","DEFAULT_QUERY_HANDLE","World","queries","create","destroy","forEach","query","component","draft","update","updateFnOrPartial","Object","assign","added","keys","filter","key","removed","options","handle","find","matches","i","destroyQuery","includes","queryIndex","indexOf","splice","q","match"],"mappings":"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"}